{"version":3,"sources":["../source/url.js"],"names":["parse_uri","uri","document","location","options","strictMode","key","query","name","parser","strict","loose","matches","exec","result","i","replace","$0","$1","$2","Uri","pathname","search","parsed","path","decodeURI","parameters","decoded_key","decodeURIComponent","decoded_value","protocol","host","port","print","map","parameter","value","undefined","Array","isArray","Error","machine","omit_protocol","omit_common_protocols","first_parameter","encodeURIComponent","anchor","assert","left","right"],"mappings":"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","file":"url.js","sourcesContent":["import { is_object, starts_with, exists, extend } from './helpers'\n\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n//\n// takes a string\n// returns an object { protocol, host, port, path, query, anchor, ... }\nfunction parse_uri(uri = document.location)\n{\n\tconst options =\n\t{\n\t\tstrictMode: false,\n\t\tkey:\n\t\t[\n\t\t\t\"source\",   // protocol:\n\t\t\t\"protocol\",\n\t\t\t\"authority\", // //user:password@\n\t\t\t\"userInfo\", // user:password\n\t\t\t\"user\",\n\t\t\t\"password\",\n\t\t\t\"host\",\n\t\t\t\"port\",\n\t\t\t\"relative\", \n\t\t\t\"path\",\n\t\t\t\"directory\",\n\t\t\t\"file\",\n\t\t\t\"query\",\n\t\t\t\"anchor\"\n\t\t],\n\t\tquery:\n\t\t{\n\t\t\tname:   \"parameters\",\n\t\t\tparser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t\t},\n\t\tparser:\n\t\t{\n\t\t\t//            protocol  :     //      user        :password    @  host          :port      path (relative,directory,file) ? query       #anchor\n\t\t\tstrict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t\t\tloose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t\t}\n\t}\n\t\t\n\tvar matches = options.parser[options.strictMode ? \"strict\" : \"loose\"].exec(uri)\n\t\n\tconst result = {}\n\n\tlet i = 14\n\twhile (i--)\n\t{\n\t\tresult[options.key[i]] = matches[i] || \"\"\n\t}\n\n\tresult[options.query.name] = {}\n\n\t// options.key[12] === \"query\"\n\tresult[options.key[12]].replace(options.query.parser, function ($0, $1, $2)\n\t{\n\t\tif ($1)\n\t\t{\n\t\t\tresult[options.query.name][$1] = $2\n\t\t}\n\t})\n\n\treturn result\n}\n\nexport default class Uri\n{\n\tconstructor(uri)\n\t{\n\t\tif (is_object(uri))\n\t\t{\n\t\t\turi = uri.pathname + (uri.search ? `?${uri.search}` : '')\n\t\t}\n\n\t\tvar parsed = parse_uri(uri)\n\n\t\tfor (let key of Object.keys(parsed))\n\t\t{\n\t\t\tthis[key] = parsed[key]\n\t\t}\n\n\t\t// this.protocol = this.protocol || 'http'\n\t\tthis.path = decodeURI(this.path)\n\t\t\n\t\tfor (let key of Object.keys(this.parameters))\n\t\t{\n\t\t\tconst decoded_key   = decodeURIComponent(key)\n\t\t\tconst decoded_value = decodeURIComponent(this.parameters[key])\n\n\t\t\tthis.parameters[decoded_key] = decoded_value\n\n\t\t\tif (decoded_key !== key)\n\t\t\t{\n\t\t\t\tdelete this.parameters[key]\n\t\t\t}\n\n\t\t\tif (!exists(this[key]))\n\t\t\t{\n\t\t\t\tthis[key] = decoded_value\n\t\t\t}\n\t\t}\n\t}\n\n\tto_relative_url()\n\t{\n\t\tthis.protocol = ''\n\t\tthis.host = ''\n\t\tthis.port = ''\n\t\t\n\t\treturn this.print()\n\t}\n\t\n\tno_parameters()\n\t{\n\t\tthis.parameters = {}\n\t\t\n\t\treturn this\n\t}\n\t\n\tset_parameters(map)\n\t{\n\t\tfor (let key of Object.keys(map))\n\t\t{\n\t\t\tthis.parameter(key, map[key])\n\t\t}\n\n\t\treturn this\n\t}\n\t\n\tparameter(parameter, value)\n\t{\n\t\tif (value === undefined)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (Array.isArray(value))\n\t\t{\n\t\t\tthrow new Error(`URL parameter \"${parameter}\" was attempted to be set as an array: [${value}]`)\n\t\t}\n\t\t\n\t\tthis.parameters[parameter] = value\n\n\t\treturn this\n\t}\n\t\n\tremove_parameter(parameter)\n\t{\n\t\tdelete this.parameters[parameter]\n\n\t\treturn this\n\t}\n\n\tpath(path)\n\t{\n\t\tif (!starts_with(path, '/'))\n\t\t{\n\t\t\tpath = '/' + path\n\t\t}\n\t\t\n\t\tthis.path = path\n\n\t\treturn this\n\t}\n\t\n\tprint(options)\n\t{\n\t\toptions = extend({ machine: true }, options)\n\n\t\tlet uri = ''\n\t\n\t\tif (this.protocol)\n\t\t{\n\t\t\tlet omit_protocol = false\n\t\t\t\n\t\t\tif (options.omit_common_protocols)\n\t\t\t{\n\t\t\t\tif (this.protocol === 'http' || this.protocol === 'https')\n\t\t\t\t{\n\t\t\t\t\tomit_protocol = true\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!omit_protocol)\n\t\t\t{\n\t\t\t\turi += this.protocol + '://'\n\t\t\t}\n\t\t}\n\t\n\t\tif (this.host)\n\t\t{\n\t\t\turi += this.host + (this.port ? ':' + this.port : '')\n\t\t}\n\t\t\t\n\t\turi += this.path //encodeURI(this.path)\n\n\t\tlet first_parameter = true\n\t\tfor (let key of Object.keys(this.parameters))\n\t\t{\n\t\t\turi += first_parameter ? '?' : '&'\n\t\t\turi += options.machine ? encodeURIComponent(key) : key\n\t\t\turi += '='\n\t\t\turi += options.machine ? encodeURIComponent(this.parameters[key]) : this.parameters[key]\n\t\t\t\n\t\t\tfirst_parameter = false\n\t\t}\n\n\t\tif (this.anchor)\n\t\t{\n\t\t\turi += '#'\n\t\t\turi += options.machine ? encodeURIComponent(this.anchor) : this.anchor\n\t\t}\n\n\t\treturn uri\n\t}\n\n\ttoString()\n\t{\n\t\treturn this.print()\n\t}\n}\n\n// self testing\n;(function()\n{\n\tfunction assert(left, right)\n\t{\n\t\tif (left !== right)\n\t\t{\n\t\t\tthrow new Error(`Assertion failed: got \"${left}\", expected \"${right}\"`)\n\t\t}\n\t}\n\t\n\tassert(new Uri('http://гугл.рф?раз=два#три').print(), 'http://гугл.рф?%D1%80%D0%B0%D0%B7=%D0%B4%D0%B2%D0%B0#%D1%82%D1%80%D0%B8')\n\tassert(new Uri('http://гугл.рф?раз=два#три').print({ machine: false }), 'http://гугл.рф?раз=два#три')\n\tassert(new Uri('google.ru').print(), 'google.ru')\n\n\tassert(parse_uri('http://google.ru/root/path/test?parameters').path, '/root/path/test')\n})()"]}