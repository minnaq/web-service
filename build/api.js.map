{"version":3,"sources":["../source/api.js"],"names":["options","web","compress","routing","log","api","legacy","method","route","handler","error_handler","parameters","apply","redirect","status","error","url","call","set_parameters","error_field","field","error_status","message","print","Error","api_module","result","listen","port","host"],"mappings":";;;;;;;;;;;;;;;;;;;;;;kBAOe,YACf;AAAA,KADwBA,OACxB,uEADkC,EAClC;;AACC,KAAMC,MAAM,qDAERD,OAFQ;AAGXE,YAAW,IAHA;AAIXC,WAAW;AAJA,IAAZ;;AAOA,KAAMC,MAAMH,IAAIG,GAAhB;;AAEA,KAAMC,MAAM,EAAZ;AACAA,KAAIC,MAAJ,GAAa,EAAb;;AAXD,YAaoB,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,MAAxB,EAAgC,QAAhC,CAbpB;;AAAA;AAaM,MAAIC,iBAAJ;AAEJ;AACAF,MAAIE,MAAJ,IAAcN,IAAIM,MAAJ,CAAd;;AAEA;AACAF,MAAIC,MAAJ,CAAWC,MAAX,IAAqB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,aAAzB,EACrB;AACCT,OAAIM,MAAJ,EAAYC,KAAZ;AAAA,0EAAmB,iBAAeG,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKQF,QAAQG,KAAR,CAAc,IAAd,QALR;;AAAA;AAAA;AAAA;AAKRC,kBALQ;AAAA;;AAAA;AAAA;AAAA;;AASjB;AACA;AACA;AACA,aAAI,CAAC,qBAAO,YAAMC,MAAb,CAAL,EACA;AACCV,cAAIW,KAAJ;AACA;;AAED;AACA;AACMC,YAnBW,GAmBLN,cAAcO,IAAd,CAAmB,IAAnB,cAnBK;;AAqBjB;AACA;;AACMJ,iBAvBW,GAuBA,kBAAQG,GAAR,EAAaE,cAAb,4BAEbP,UAFa;AAGhBQ,uBAAe,YAAMC,KAHL;AAIhBC,wBAAe,YAAMP,MAJL;AAKhBC,iBAAe,YAAMO;AALL,aAOhBC,KAPgB,EAvBA;;AAgCjB;;AAhCiB,0CAiCV,EAAEV,kBAAF,EAjCU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAAA;AAAA;AAAA;AAAA;AAoCA,GAtCD;AAnBF;;AAaC,0CACA;AAAA;AA4CC;;AAED,KAAI,CAACb,QAAQK,GAAb,EACA;AACC,QAAM,IAAImB,KAAJ,uCAAN;AACA;;AA/DF;AAAA;AAAA;;AAAA;AAiEC,kDAAuBxB,QAAQK,GAA/B,4GACA;AAAA,OADSoB,UACT;;AACC;AACAA,cAAWpB,GAAX;AACA;AArEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuEC,KAAMqB,SACN;AACCC,UAAQ,gBAACC,IAAD,EAAOC,IAAP;AAAA,UAAgB5B,IAAI0B,MAAJ,CAAWC,IAAX,EAAiBC,IAAjB,CAAhB;AAAA;AADT,EADA;;AAKA,QAAOH,MAAP;AACA,C;;AArFD;;;;AACA;;;;AAEA;;;;AACA;;;;AACA","file":"api.js","sourcesContent":["import path from 'path'\nimport fs   from 'fs'\n\nimport web_service   from './web service'\nimport Url           from './url'\nimport { exists, is_object } from './helpers'\n\nexport default function(options = {})\n{\n\tconst web = web_service\n\t({\n\t\t...options,\n\t\tcompress : true,\n\t\trouting  : true\n\t})\n\n\tconst log = web.log\n\n\tconst api = {}\n\tapi.legacy = {}\n\n\tfor (let method of ['get', 'put', 'patch', 'post', 'delete'])\n\t{\n\t\t// Web 2.0 Api (Ajax)\n\t\tapi[method] = web[method]\n\n\t\t// Web 1.0 Api (no Ajax)\n\t\tapi.legacy[method] = function(route, handler, error_handler)\n\t\t{\n\t\t\tweb[method](route, async function(parameters)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t// The handler returns a URL to which the user will be redirected\n\t\t\t\t\treturn { redirect: await handler.apply(this, arguments) }\n\t\t\t\t}\n\t\t\t\tcatch (error)\n\t\t\t\t{\n\t\t\t\t\t// Log the error, if it's not a normal Api error\n\t\t\t\t\t// (prevents log pollution with things like \n\t\t\t\t\t//  `404 User not found` or `401 Not authenticated`)\n\t\t\t\t\tif (!exists(error.status))\n\t\t\t\t\t{\n\t\t\t\t\t\tlog.error(error)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Call the `error_handler` to get a URL\n\t\t\t\t\t// to which the user will be redirected\n\t\t\t\t\tconst url = error_handler.call(this, error)\n\n\t\t\t\t\t// Add error info to the URL\n\t\t\t\t\t// to which the user is going to be redirected\n\t\t\t\t\tconst redirect = new Url(url).set_parameters\n\t\t\t\t\t({\n\t\t\t\t\t\t...parameters,\n\t\t\t\t\t\terror_field  : error.field,\n\t\t\t\t\t\terror_status : error.status,\n\t\t\t\t\t\terror        : error.message\n\t\t\t\t\t})\n\t\t\t\t\t.print()\n\n\t\t\t\t\t// Perform the redirect\n\t\t\t\t\treturn { redirect }\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tif (!options.api)\n\t{\n\t\tthrow new Error(`Api service \"api\" array is required`)\n\t}\n\n\tfor (let api_module of options.api)\n\t{\n\t\t// log.info('loading api module', file)\n\t\tapi_module(api)\n\t}\n\n\tconst result = \n\t{\n\t\tlisten: (port, host) => web.listen(port, host)\n\t}\n\n\treturn result\n}"]}