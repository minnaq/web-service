{"version":3,"sources":["../../source/middleware/rewrite.js"],"names":["rewrite","from","options","ctx","next","destination","Error","url"],"mappings":";;;;;;;;;;;;;;kBAIwBA,O;;AAJxB;;AACA;;;;AAEA;AACe,SAASA,OAAT,CAAiBC,IAAjB,EACf;AAAA,KADsCC,OACtC,uEADgD,EAChD;;AACC;AAAA,wEAAO,iBAAeC,GAAf,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFC,kBAFE,GAEY,qBAAMF,GAAN,EAAWF,IAAX,EAAiBC,OAAjB,CAFZ;;AAIN;;AAJM,YAKFG,WALE;AAAA;AAAA;AAAA;;AAAA,WAQA,0BAAYA,WAAZ,EAAyB,GAAzB,CARA;AAAA;AAAA;AAAA;;AAAA,aAUE,IAAIC,KAAJ,6CAVF;;AAAA;;AAaLH,WAAII,GAAJ,GAAUF,WAAV;;AAbK;;AAgBN;AACAD;;AAjBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAAA;AAAA;AAAA;AAAA;AAmBA","file":"rewrite.js","sourcesContent":["import { match }       from './redirect'\nimport { starts_with } from '../helpers'\n\n// Koa URL rewrite\nexport default function rewrite(from, options = {})\n{\n\treturn async function(ctx, next)\n\t{\n\t\tlet destination = match(ctx, from, options)\n\n\t\t// If there was a match, then rewrite URL\n\t\tif (destination)\n\t\t{\n\t\t\t// Validate destination path\n\t\t\tif (!starts_with(destination, '/'))\n\t\t\t{\n\t\t\t\tthrow new Error(`The rewritten URL must start with a slash`)\n\t\t\t}\n\n\t\t\tctx.url = destination\n\t\t}\n\n\t\t// Proceed\n\t\tnext()\n\t}\n}\n"]}